- if (pagination && !largeQuery)
  nav.sorting
    | Order By:
    a(href=url_with(false,{orderby:'value'}), 
      class="xhr funding" + (query.orderby == 'value' ? ' active' : ''))
      span Funding Size 
    a(href=url_with(false,{orderby:'name'}), 
      class="xhr az" + (query.orderby == 'name' ? ' active' : ''))
      span A-Z

h3.inner #{activity_count} activities found
  - if (pagination)
    != partial('pagination', pagination)

- if (largeQuery && pagination.current == 1)
  div#dialog(style="display:none")
    h2 <strong>#{activity_count}</strong> projects found
    p Refine search by selecting another sector, sub-sector, funder or area

.zoomable
  ul.activities.clearfix
    each activity in activities
      li.activity.bubble.hidden(data-name=activity.title(), data-value=activity.value())
        .outline
        .inner
          a.xhr.content(href='/activity/' + activity.id(), data-history='{"enter":"slideUp"}')
            p.text.hidden= activity.title().replace("\n", "")

nav.foot!= partial('activities-nav', {dataFile: !largeQuery})

script
  inlines.push(function() {
    var wrapper = $(".zoomable");
    var container = wrapper.children(".activities");
    var activities = container.children(".activity");
    var content = activities.find(".content");

    var font = {min: 8, max: 25};
    Math.seedrandom(container.map(function() { return $(this).attr("id"); }).toArray().join(""));
    container.bubbleLayout({
      bubbleClasses: bubbleClasses,
      layout: 'pack', 
      font: font, 
      diameter: {min: 100, max: 200}
    });
    
    content.fitText('circular', {font: font, afterFit: function() {
      var notEmpty = function() { return $(this).text() !== ""; }
      var textLines = $(this).children().filter(notEmpty).toArray();
      $(textLines.slice(-2)).addClass("small");
    }});
    
    var currentScale = 1;
    new Zoomer(wrapper.get(0), wrapper.find('li').toArray(),{
        finish:function(){
          
          // assign the variables that would be supplied by zynga
          var zoom = this.scale;
          var zoomed = zoom - currentScale;
          currentScale = zoom;
          
          var min = Math.round(font.min / zoom);
          var filter = zoomed > 0 ? ".truncated" : function() { return parseInt($(this).css("font-size"), 10) < min; };
          content.filter(filter).fitText('circular', {font: {min: min, max: font.max}});
        }
    });
    
    $('#dialog').hide().fadeIn();
    
    $.setArcNav(!{JSON.stringify(query)}, '/activities');
  });